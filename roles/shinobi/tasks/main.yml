---
# tasks file for shinobi

# docker run -d --name='Shinobi' -p '8080:8080/tcp' \
#   -v "/dev/shm/Shinobi/streams":'/dev/shm/streams':'rw' \
#   -v "$HOME/Shinobi/config":'/config':'rw' \
#   -v "$HOME/Shinobi/customAutoLoad":'/home/Shinobi/libs/customAutoLoad':'rw' \
#   -v "$HOME/Shinobi/database":'/var/lib/mysql':'rw' \
#   -v "$HOME/Shinobi/videos":'/home/Shinobi/videos':'rw' \
#   -v "$HOME/Shinobi/plugins":'/home/Shinobi/plugins':'rw' \ 
#   -v '/etc/localtime':'/etc/localtime':'ro' \
#   shinobisystems/shinobi:dev

  - name: "Create shinobi stream ramdisk mount"
    mount:
        state: mounted
        fstype: tmpfs
        path: "/mnt/shinobi_streams/"
        src: tmpfs
        
  - name: Create Shinobi Required Directories
    ansible.builtin.file:
        state: directory
        dest: "{{ item }}"
    loop:
        - /mnt/shinobi_streams
        - /whidbey/shinobi/customAutoLoad
        - /whidbey/shinobi/database
        - /whidbey/shinobi/plugins       
        - /snoqualmie/media/security_cam_recordings


  - name: "Deploy shinobi container"
    docker_container:
        name: shinobi
        hostname: shinobi
        image: shinobisystems/shinobi:dev
        restart_policy: unless-stopped
        state: started
        ports: 8082:8080
        mounts:
          - source: "/mnt/shinobi_streams"
            target: "/dev/shm/streams"
            read_only: no
            type: bind
          - source: "/whidbey/shinobi/customAutoLoad"
            target: "/home/Shinobi/libs/customAutoLoad"
            read_only: no
            type: bind
          - source: "/whidbey/shinobi/database"
            target: "/var/lib/mysql"
            read_only: no
            type: bind
          - source: "/snoqualmie/media/security_cam_recordings"
            target: "/home/Shinobi/videos"
            read_only: no
            type: bind
          - source: "/whidbey/shinobi/plugins"
            target: "/home/Shinobi/plugins"
            read_only: no
            type: bind
          - source: "/etc/localtime"
            target: "/etc/localtime"
            read_only: yes
            type: bind       

# docker run -d --name='shinobi-tensorflow' -e PLUGIN_HOST='[shinobi container host IP]' \
#   -e PLUGIN_PORT='8080' -v "$HOME/Shinobi/docker-plugins/tensorflow":'/config':'rw'\
#   shinobisystems/shinobi-tensorflow:latest


# once Shinobi TF container is started, admin needs to `docker log -f shinobi-tensorflow` 
# to find the relevant tensorflow key generated, which will be added to Shinobi's config
# at shinobi admin > configuration > plugin keys

#  - name: "Deploy shinobi TensorFlow plugin container"
#    docker_container:
#        name: shinobi-tensorflow
#        hostname: shinobi-tensorflow
#        image: shinobisystems/shinobi-tensorflow
#        restart_policy: unless-stopped
#        state: started
#        mounts:
#          - source: "/whidbey/shinobi/docker-plugins/tensorflow"
#            target: "/config"
#            read_only: no
#            type: bind
#        env:
#          PLUGIN_HOST: "10.0.1.203"
#          PLUGIN_PORT: "8082"
#          CUDA_VISIBLE_DEVICES: "1"
#        comparisons:        
#            env: strict
